{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Loader/Loader.js","components/Button/Button.js","services/picturesApi.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","state","request","handleChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","toast","info","props","onSubmit","this","className","type","onChange","name","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","pictures","onClick","map","picture","src","webformatURL","alt","tags","id","Loader","color","height","width","timeout","Button","loadPicture","page","fetch","then","response","ok","json","Promise","reject","Error","ImageGallery","error","status","getPicturesAfterNewSearch","a","picturesAPI","query","hits","catch","getPicturesFromNextPage","picturesArray","prevState","autoScroll","window","scrollTo","top","document","documentElement","scrollHeight","behavior","handleLoadMore","prevProps","message","length","Modal","handleKeyDown","e","code","onClose","handleOverlayClick","target","addEventListener","removeEventListener","modalPicture","largeImageURL","App","pictureQuery","showModal","handleFormSubmit","openModal","closeModal","position","autoClose","defaultProps","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"waAKMA,E,4MACJC,MAAQ,CACNC,QAAS,I,EAGXC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEH,QAASE,EAAME,cAAcC,MAAMC,iB,EAGrDC,aAAe,SAACL,GAGd,GAFAA,EAAMM,iBAE4B,KAA9B,EAAKT,MAAMC,QAAQS,OACrB,OAAOC,IAAMC,KAAK,oCAGpB,EAAKC,MAAMC,SAAS,EAAKd,MAAMC,SAC/B,EAAKG,SAAS,CAAEH,QAAS,M,4CAG3B,WACE,IAAQO,EAA+BO,KAA/BP,aAAcN,EAAiBa,KAAjBb,aACtB,OACE,wBAAQc,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaF,SAAUN,EAAvC,UACE,wBAAQS,KAAK,SAASD,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVE,SAAUhB,EACVe,KAAK,OACLE,KAAK,UACLb,MAAOS,KAAKf,MAAMC,QAClBmB,aAAa,MACbC,WAAS,EACTC,YAAY,sC,GArCAC,aA6CTxB,I,sCC7BAyB,MAlBf,YAAkD,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QACpC,OAAOD,EAASE,KAAI,SAACC,GAAD,OAClB,oBAAqBZ,UAAU,mBAA/B,SACE,qBACEU,QAAS,kBAAMA,EAAQE,IACvBC,IAAKD,EAAQE,aACbC,IAAKH,EAAQI,KACbhB,UAAU,4BALLY,EAAQK,Q,+BCAN,SAASC,IACtB,OACE,qBAAKlB,UAAU,SAAf,SACE,cAAC,IAAD,CACEC,KAAK,OACLkB,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,IACT,cAAa,Q,MCCNC,MAZf,YAA8B,IAAZb,EAAW,EAAXA,QAChB,OACE,wBAAQA,QAASA,EAASV,UAAU,SAASC,KAAK,SAAlD,wBCMWuB,MAXf,SAAqBvC,EAASwC,GAC5B,OAAOC,MAAM,8BAAD,OACoBzC,EADpB,iBACoCwC,EADpC,gGAEVE,MAAK,SAACC,GACN,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,qCAAwChD,SCG5DiD,G,kNAMJlD,MAAQ,CACNyB,SAAU,GACV0B,MAAO,KACPV,KAAM,EACNW,OAAQ,Q,EAgBVC,0B,sBAA4B,sBAAAC,EAAA,sEACpBC,EAAY,EAAK1C,MAAM2C,MAAO,EAAKxD,MAAMyC,MAC5CE,MAAK,SAAClB,GACL,EAAKrB,SAAS,CAAEqB,SAAUA,EAASgC,KAAML,OAAQ,gBAElDM,OAAM,SAACP,GAAD,OAAW,EAAK/C,SAAS,CAAE+C,QAAOC,OAAQ,gBALzB,2C,EAQ5BO,wB,sBAA0B,sBAAAL,EAAA,sEAClBC,EAAY,EAAK1C,MAAM2C,MAAO,EAAKxD,MAAMyC,MAC5CE,MAAK,SAAClB,GACL,IAAMmC,EAAgBnC,EAASgC,KAC/B,EAAKrD,UAAS,SAACyD,GAAD,MAAgB,CAC5BpC,SAAS,GAAD,mBAAMoC,EAAUpC,UAAhB,YAA6BmC,IACrCR,OAAQ,kBAGXM,OAAM,SAACP,GAAD,OAAW,EAAK/C,SAAS,CAAE+C,QAAOC,OAAQ,gBAT3B,2C,EAY1BU,WAAa,WACXC,OAAOC,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,Y,EAIdC,eAAiB,WACf,EAAKlE,UAAS,SAACyD,GACb,MAAO,CAAEpB,KAAMoB,EAAUpB,KAAO,O,+FA1CpC,WAAyB8B,EAAWV,GAApC,SAAAP,EAAA,yDACMiB,EAAUf,QAAUzC,KAAKF,MAAM2C,MADrC,uBAEIzC,KAAKX,SAAS,CAAEgD,OAAQ,UAAW3B,SAAU,GAAIgB,KAAM,IAF3D,SAGU1B,KAAKsC,4BAHf,OAIItC,KAAK+C,aAJT,YAMMD,EAAUpB,OAAS1B,KAAKf,MAAMyC,MAAQ1B,KAAKf,MAAMyC,KAAO,GAN9D,wBAOI1B,KAAKX,SAAS,CAAEgD,OAAQ,kBAP5B,SAQUrC,KAAK4C,0BARf,OASI5C,KAAK+C,aATT,iD,6EA8CA,WACE,MAAoC/C,KAAKf,MAAjCoD,EAAR,EAAQA,OAAQ3B,EAAhB,EAAgBA,SAAU0B,EAA1B,EAA0BA,MAE1B,MAAe,SAAXC,EAEA,qBAAKpC,UAAU,UAAf,kEAMW,YAAXoC,EACK,cAAC,EAAD,IAGM,kBAAXA,EAEA,qCACE,oBAAIpC,UAAU,eAAd,SACE,cAAC,EAAD,CACES,SAAUA,EACVC,QAASX,KAAKF,MAAMa,YAGxB,cAAC,EAAD,OAKS,aAAX0B,EACKzC,IAAMwC,MAAMA,EAAMqB,SAGZ,aAAXpB,EAEA,qCACE,oBAAIpC,UAAU,eAAd,SACE,cAAC,EAAD,CACES,SAAUA,EACVC,QAASX,KAAKF,MAAMa,YAIvBD,EAASgD,OAAS,EACjB,cAAC,EAAD,CAAQ/C,QAASX,KAAKuD,iBAEtB,qBAAKtD,UAAU,UAAf,mEAbR,M,GA5FuBO,cAmHZ2B,ICzHTwB,G,kNAcJC,cAAgB,SAACC,GACA,WAAXA,EAAEC,MACJ,EAAKhE,MAAMiE,W,EAIfC,mBAAqB,SAACH,GAChBA,EAAEvE,gBAAkBuE,EAAEI,QACxB,EAAKnE,MAAMiE,W,uDAhBf,WACEf,OAAOkB,iBAAiB,UAAWlE,KAAK4D,iB,kCAG1C,WACEZ,OAAOmB,oBAAoB,UAAWnE,KAAK4D,iB,oBAe7C,WACE,IAAQQ,EAAiBpE,KAAKF,MAAtBsE,aACR,OACE,qBAAKnE,UAAU,UAAUU,QAASX,KAAKgE,mBAAvC,SACE,qBAAK/D,UAAU,QAAf,SACE,qBACEA,UAAU,iBACVa,IAAKsD,EAAaC,cAClBrD,IAAKoD,EAAanD,e,GAlCVT,cA0CLmD,ICvCTW,G,kNAKJrF,MAAQ,CACNsF,aAAc,GACdC,WAAW,EACXJ,aAAc,I,EAGhBK,iBAAmB,SAACF,GAClB,EAAKlF,SAAS,CAAEkF,kB,EAGlBG,UAAY,SAACN,GACX,EAAK/E,SAAS,CACZmF,WAAW,EACXJ,kB,EAIJO,WAAa,WACX,EAAKtF,SAAS,CAAEmF,WAAW,K,4CAG7B,WACE,MAAkDxE,KAAKf,MAA/CsF,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,UAAWJ,EAAjC,EAAiCA,aAEjC,OACE,gCACE,cAAC,EAAD,CAAWrE,SAAUC,KAAKyE,mBAC1B,cAAC,EAAD,CAAchC,MAAO8B,EAAc5D,QAASX,KAAK0E,YAChDF,GACC,cAAC,EAAD,CAAOJ,aAAcA,EAAcL,QAAS/D,KAAK2E,aAEnD,cAAC,IAAD,CAAgBC,SAAS,aAAaC,UAAW,a,GApCvCrE,cAAZ8D,EACGQ,aAAe,GAyCTR,QCrCAS,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBrD,MAAK,YAAkD,IAA/CsD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtC,SAASuC,eAAe,SAM1BX,M","file":"static/js/main.23e70e92.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./Searchbar.css\";\n\nclass Searchbar extends Component {\n  state = {\n    request: \"\",\n  };\n\n  handleChange = (event) => {\n    this.setState({ request: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (this.state.request.trim() === \"\") {\n      return toast.info(\"Type something to find a picture\");\n    }\n\n    this.props.onSubmit(this.state.request);\n    this.setState({ request: \"\" });\n  };\n\n  render() {\n    const { handleSubmit, handleChange } = this;\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            onChange={handleChange}\n            type=\"text\"\n            name=\"request\"\n            value={this.state.request}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import PropTypes from \"prop-types\";\nimport \"./ImageGalleryItem.css\";\n\nfunction ImageGalleryItem({ pictures, onClick }) {\n  return pictures.map((picture) => (\n    <li key={picture.id} className=\"ImageGalleryItem\">\n      <img\n        onClick={() => onClick(picture)}\n        src={picture.webformatURL}\n        alt={picture.tags}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  ));\n}\n\nImageGalleryItem.propTypes = {\n  pictures: PropTypes.array,\n  onClick: PropTypes.func,\n};\n\nexport default ImageGalleryItem;\n","import React from \"react\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport LoaderSpinner from \"react-loader-spinner\";\nimport \"./Loader.css\";\n\nexport default function Loader() {\n  return (\n    <div className=\"Loader\">\n      <LoaderSpinner\n        type=\"Puff\"\n        color=\"#046d0c\"\n        height={100}\n        width={100}\n        timeout={5000}\n        margin-left={300}\n      />\n    </div>\n  );\n}\n","import PropTypes from \"prop-types\";\nimport \"./Button.css\";\n\nfunction Button({ onClick }) {\n  return (\n    <button onClick={onClick} className=\"Button\" type=\"button\">\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","function loadPicture(request, page) {\n  return fetch(\n    `https://pixabay.com/api/?q=${request}&page=${page}&key=23157065-e1d5c0e7ddd229ceec096f468&image_type=photo&orientation=horizontal&per_page=12`\n  ).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`There are no pictures with ${request}`));\n  });\n}\n\nexport default loadPicture;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\nimport Loader from \"../../components/Loader/Loader\";\nimport Button from \"../Button/Button\";\nimport picturesAPI from \"../../services/picturesApi\";\nimport \"./ImageGallery.css\";\n\nclass ImageGallery extends Component {\n  static propTypes = {\n    query: PropTypes.string,\n    openModal: PropTypes.func,\n  };\n\n  state = {\n    pictures: [],\n    error: null,\n    page: 1,\n    status: \"idle\",\n  };\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevProps.query !== this.props.query) {\n      this.setState({ status: \"pending\", pictures: [], page: 1 });\n      await this.getPicturesAfterNewSearch();\n      this.autoScroll();\n    }\n    if (prevState.page !== this.state.page && this.state.page > 1) {\n      this.setState({ status: \"pending-ready\" });\n      await this.getPicturesFromNextPage();\n      this.autoScroll();\n    }\n  }\n\n  getPicturesAfterNewSearch = async () => {\n    await picturesAPI(this.props.query, this.state.page)\n      .then((pictures) => {\n        this.setState({ pictures: pictures.hits, status: \"resolved\" });\n      })\n      .catch((error) => this.setState({ error, status: \"rejected\" }));\n  };\n\n  getPicturesFromNextPage = async () => {\n    await picturesAPI(this.props.query, this.state.page)\n      .then((pictures) => {\n        const picturesArray = pictures.hits;\n        this.setState((prevState) => ({\n          pictures: [...prevState.pictures, ...picturesArray],\n          status: \"resolved\",\n        }));\n      })\n      .catch((error) => this.setState({ error, status: \"rejected\" }));\n  };\n\n  autoScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  handleLoadMore = () => {\n    this.setState((prevState) => {\n      return { page: prevState.page + 1 };\n    });\n  };\n\n  render() {\n    const { status, pictures, error } = this.state;\n\n    if (status === \"idle\") {\n      return (\n        <div className=\"Warning\">\n          Write down something to start searching for pictures\n        </div>\n      );\n    }\n\n    if (status === \"pending\") {\n      return <Loader />;\n    }\n\n    if (status === \"pending-ready\") {\n      return (\n        <>\n          <ul className=\"ImageGallery\">\n            <ImageGalleryItem\n              pictures={pictures}\n              onClick={this.props.onClick}\n            />\n          </ul>\n          <Loader />\n        </>\n      );\n    }\n\n    if (status === \"rejected\") {\n      return toast.error(error.message);\n    }\n\n    if (status === \"resolved\") {\n      return (\n        <>\n          <ul className=\"ImageGallery\">\n            <ImageGalleryItem\n              pictures={pictures}\n              onClick={this.props.onClick}\n            />\n          </ul>\n\n          {pictures.length > 0 ? (\n            <Button onClick={this.handleLoadMore} />\n          ) : (\n            <div className=\"Warning\">\n              You should write down correct word for search\n            </div>\n          )}\n        </>\n      );\n    }\n  }\n}\n\nexport default ImageGallery;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Modal.css\";\n\nclass Modal extends Component {\n  static propTypes = {\n    modalPicture: PropTypes.object,\n    onClose: PropTypes.func,\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onClose();\n    }\n  };\n\n  handleOverlayClick = (e) => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { modalPicture } = this.props;\n    return (\n      <div className=\"Overlay\" onClick={this.handleOverlayClick}>\n        <div className=\"Modal\">\n          <img\n            className=\"Modal__Picture\"\n            src={modalPicture.largeImageURL}\n            alt={modalPicture.tags}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n","import React, { Component } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Modal from \"./components/Modal/Modal\";\nimport \"./App.css\";\n\nclass App extends Component {\n  static defaultProps = {};\n\n  static propTypes = {};\n\n  state = {\n    pictureQuery: \"\",\n    showModal: false,\n    modalPicture: \"\",\n  };\n\n  handleFormSubmit = (pictureQuery) => {\n    this.setState({ pictureQuery });\n  };\n\n  openModal = (modalPicture) => {\n    this.setState({\n      showModal: true,\n      modalPicture,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({ showModal: false });\n  };\n\n  render() {\n    const { pictureQuery, showModal, modalPicture } = this.state;\n\n    return (\n      <div>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageGallery query={pictureQuery} onClick={this.openModal} />\n        {showModal && (\n          <Modal modalPicture={modalPicture} onClose={this.closeModal} />\n        )}\n        <ToastContainer position=\"top-center\" autoClose={2000} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}